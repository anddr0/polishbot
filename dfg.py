import keyboard, time, pyautogui, win32gui, win32com.client, random, glob, pyowm, telebot, os
from prjcts import my_libs
from telebot import types
from win32gui import SetForegroundWindow
from pathlib import Path
from threading import Thread
from math import sqrt


def my_bot():  # –≠—Ç–æ –±–æ—Ç
    try:
        chat_id = 840550973
        bot = telebot.TeleBot('1206860124:AAEFLYwaHK1SUKg1pt0ene4qt9IdULOBAo4')

        @bot.message_handler(commands=['help'])
        def answrrr(message):
            keyboard = telebot.types.ReplyKeyboardMarkup(True)
            keyboard.row(my_libs.game_boot[0], my_libs.sint_the_word[0])
            keyboard.row(my_libs.screen_shots[0], my_libs.auds[0])
            keyboard.row(my_libs.vids[0], '/–Ω–∞–ø–∏—à–∏')
            keyboard.row('/–ø–æ–≥–æ–¥–∞')
            bot.send_message(message.chat.id, '–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n/–Ω–∞–ø–∏—à–∏ - –Ω–∞–ø–∏—à—É –Ω–∞ –∫–æ–º–ø —Ç–æ, —á—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ\n/–≤–∏–¥–µ–æ - –ø—Ä–∏—à–ª—é –≤–∏–¥–æ—Å \n/—Å–∫—Ä–∏–Ω—à–æ—Ç - –ø—Ä–∏—à–ª—é —Å–∫—Ä–∏–Ω—à–æ—Ç', reply_markup=keyboard)

        @bot.message_handler(content_types=['text'])        # –†–µ–∞–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ —Ç–µ–∫—Å—Ç
        def get_text_messages(message):  # –≠—Ç–æ –º—ã –∏—â–µ–º –∫–æ–º–∞–Ω–¥—ã –≤ —Ç–µ–∫—Å—Ç–µ –∏ —Ä–µ–∞–≥–∏—Ä—É–µ–º –Ω–∞ –Ω–∏—Ö
            if message.text.lower() in my_libs.hi:  # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                hism = random.randrange(0, len(my_libs.hi_smiles))
                hit = random.randrange(1, len(my_libs.bot_hi))
                bot.send_message(message.from_user.id, my_libs.bot_hi[hit])
                bot.send_message(message.from_user.id, my_libs.hi_smiles[hism])
            elif message.text.lower() in my_libs.game_boot:  # –ó–∞–ø—É—Å–∫–∞–Ω–∏–µ –∏–≥—Ä—ã
                bot.register_next_step_handler(message, get_game_boot)
            elif message.text.lower() == "–∑–∞—à–∏—Ñ—Ä—É–π":  # –®–∏—Ñ—Ä –¶–µ–∑–∞—Ä—è
                bot.register_next_step_handler(message, get_open)
            elif message.text.lower() in my_libs.sint_the_word:  # –í–∫–ª—é—á–∞–µ—Ç—Å—è –±—Ä–∞—É–∑–µ—Ä –∏ –ø—Ä–æ–≥–æ–≤–∞—Ä–∏–≤–∞–µ—Ç—å—Å—è –∑–∞–¥–∞–Ω—ã–π —Ç–µ–∫—Å—Ç
                quesm = random.randrange(0, len(my_libs.que_smiles))
                bot.send_message(message.from_user.id, "–ß—Ç–æ –ø—Ä–æ—á–µ—Å—Ç—å?")
                bot.send_message(message.from_user.id, my_libs.que_smiles[quesm])
                bot.register_next_step_handler(message, get_sint)
            elif message.text.lower() in my_libs.screen_shots:  # –î–µ–ª–∞–µ—Ç—Å—è —Å–∫—Ä–∏–Ω—à–æ—Ç –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è
                quesm = random.randrange(0, len(my_libs.que_smiles))
                bot.send_message(message.from_user.id, "–ö–∞–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ?")
                bot.send_message(message.from_user.id, my_libs.que_smiles[quesm])
                bot.register_next_step_handler(message, send_photo)
            elif message.text.lower() in my_libs.auds:  # –ó–∞–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è –∞—É–¥–∏–æ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è
                quesm = random.randrange(0, len(my_libs.que_smiles))
                bot.send_message(message.from_user.id, "–°–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥?")
                bot.send_message(message.from_user.id, my_libs.que_smiles[quesm])
                bot.register_next_step_handler(message, send_voice)
            elif message.text.lower() in my_libs.vids:  # –ó–∞–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è –≤–∏–¥–µ–æ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è
                quesm = random.randrange(0, len(my_libs.que_smiles))
                bot.send_message(message.from_user.id, "–°–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥?")
                bot.send_message(message.from_user.id, my_libs.que_smiles[quesm])
                bot.register_next_step_handler(message, send_video)
            elif message.text.lower() in my_libs.comms:  # –ü–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥
                bot.send_message(message.from_user.id, my_libs.game_boot[0] + "     " + my_libs.sint_the_word[0] + "     " + my_libs.screen_shots[0] + "     " + my_libs.auds[0] + "     " + my_libs.vids[0] + "   /–Ω–∞–ø–∏—à–∏   " + "    /–ø–æ–≥–æ–¥–∞    ")
            elif message.text.lower() in my_libs.keyb:  # –≠—Ç–æ –º–æ—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∫–∞ –∏ —è –µ—é –≥–æ—Ä–∂—É—Å—å
                bot.register_next_step_handler(message, start_message)
            elif message.text.lower() == "enter":
                keyboard.press('enter')
            elif message.text.lower() == "space":
                keyboard.press('space')
            elif message.text.lower() == "backspace":
                keyboard.press('backspace')
            elif message.text.lower() == "/–Ω–∞–ø–∏—à–∏":   # –≠—Ç–æ –±–æ—Ç –∫–æ–ø–∏—Ä—É–µ—Ç –∏ –ø–∏—à–µ—Ç –Ω–∞ –∫–æ–º–ø–µ –≤—Å–µ —á—Ç–æ —è –µ–º—É —Å–∫–∞–∂—É
                quesm = random.randrange(0, len(my_libs.que_smiles))
                bot.send_message(message.from_user.id, "–ê —á—Ç–æ?")
                bot.send_message(message.from_user.id, my_libs.que_smiles[quesm])
                bot.register_next_step_handler(message, write)
            elif message.text == "‚¨ÖÔ∏è":
                keyboard.press('left')
            elif message.text == "‚û°Ô∏è":
                keyboard.press('right')
            elif message.text == "‚¨ÜÔ∏è":
                keyboard.press('up')
            elif message.text == "‚¨áÔ∏è":
                keyboard.press('down')
            elif message.text.lower() == "/–ø–æ–≥–æ–¥–∞":  # –≠—Ç–æ —è —É–∑–Ω–∞—é –ø–æ–≥–æ–¥—É
                weather(message)
            elif message.text.lower() == "/–∫–≤–∞–¥—Ä–∞—Ç":  # –≠—Ç–æ –º–Ω–µ —Ä–µ—à–∞—é—Ç –∫–≤–∞–¥—Ä–∞—Ç–Ω–æ–µ —É—Ä–∞–≤–Ω–µ–Ω–∏–µ
                bot.send_message(message.from_user.id, "–í–≤–µ–¥–∏ —á–∏—Å–ª–æ a ")
                bot.register_next_step_handler(message, get_a)
            else:  # –≠—Ç–æ –µ—Å–ª–∏ —è –Ω–µ —Ç–æ –Ω–∞–ø–∏—Å–∞–ª
                fusm = random.randrange(0, len(my_libs.fu_smiles))
                hit = random.randrange(1, len(my_libs.no_und))
                bot.send_message(chat_id, my_libs.fu_smiles[fusm])
                bot.send_message(chat_id, my_libs.no_und[hit])

        def get_a(message):
            global a
            a = int(message.text)
            bot.send_message(message.from_user.id, "–í–≤–µ–¥–∏ —á–∏—Å–ª–æ b ")
            bot.register_next_step_handler(message, get_b)

        def get_b(message):
            global b
            b = int(message.text)
            bot.send_message(message.from_user.id, "–í–≤–µ–¥–∏ —á–∏—Å–ª–æ c ")
            bot.register_next_step_handler(message, get_c)

        def get_c(message):
            global c
            c = int(message.text)
            calculate(message)

        def calculate(message):
            D = b ** 2 - 4 * a * c
            if D < 0:
                bot.send_message(message.from_user.id, "–£—Ä–∞–≤–Ω–µ–Ω–∏–µ –Ω–µ –∏–º–µ–µ—Ç —Ä–µ—à–µ–Ω–∏—è, D < 0")
            elif D == 0:
                x = -b / 2 * a
                bot.send_message(message.from_user.id, "x = " + str(x))
            else:
                x1 = (-b - sqrt(D)) / (2 * a)
                x2 = (-b + sqrt(D)) / (2 * a)
                bot.send_message(message.from_user.id, "D = " + str(D) + ", ‚àöD = " + str(sqrt(D)))
                bot.send_message(message.from_user.id, "x1 = " + str(x1))
                bot.send_message(message.from_user.id, "x2 = " + str(x2))

        def weather(message):
            city = 'Karlivka,UA'
            owm = pyowm.OWM('9ef8de92394c439b01c6180c6fae3dda')
            mgr = owm.weather_manager()
            observation = mgr.weather_at_place(city)
            w = observation.weather
            temperature = w.temperature('celsius')['temp']
            wind_dict_in_meters_per_sec = observation.weather.wind()
            humid = w.humidity
            sens = temperature - 0.4 * (temperature - 10) * (1 - humid / 100)
            sky_is = w.detailed_status
            bot.send_message(message.from_user.id, "‚òÄ" + sky_is + "‚õà")
            bot.send_message(message.from_user.id, "üí®–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: <b>" + str(wind_dict_in_meters_per_sec['speed']) + " </b>–º/—Å", parse_mode='html')
            bot.send_message(message.from_user.id, "üî•–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: <b>" + str(temperature) + "¬∞C</b>" + " \n(–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: <b>" + str(int(sens)) + "¬∞C)</b>", parse_mode='html')
            bot.send_message(message.from_user.id, "üí¶–í–ª–∞–∂–Ω–æ—Å—Ç—å —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç: <b>" + str(humid) + "%</b>", parse_mode='html')
            bot.send_message(message.from_user.id, "üìÅ")

        def write(message):
            mess = message.text
            keyboard.write(mess)

        def start_message(message):
            keyboard = telebot.types.ReplyKeyboardMarkup(True)
            keyboard.row('Space', 'Enter', 'BackSpace')
            keyboard.row('‚û°Ô∏è', '‚¨ÖÔ∏è', '‚¨ÜÔ∏è', '‚¨áÔ∏è')
            bot.send_message(message.chat.id, 'Keyboard', reply_markup=keyboard)

        def send_video(message):
            chat_id = 840550973
            directory = 'E:\\–≤–∏–¥—Å\\Desktop\\'
            os.chdir(directory)
            files = glob.glob('*.mp4')
            for filename in files:
                        os.unlink(filename)
            files = glob.glob('*.ogg')
            for filename in files:
                os.unlink(filename)
            secs = int(message.text)
            keyboard.press_and_release('alt + f9')
            time.sleep(secs)
            keyboard.press_and_release('alt + f9')
            time.sleep(5)
            name = os.listdir(path="E:\\–≤–∏–¥—Å\\Desktop\\")[0]
            video = open('E:\\–≤–∏–¥—Å\\Desktop\\' + name, 'rb')
            bot.send_video(chat_id, video)

        def send_voice(message):
            chat_id = 840550973
            directory = 'E:\\–≤–∏–¥—Å\\Desktop\\'
            os.chdir(directory)
            files = glob.glob('*.ogg')
            for filename in files:
                os.unlink(filename)
            files = glob.glob('*.mp4')
            for filename in files:
                os.unlink(filename)
            secs = int(message.text)
            keyboard.press_and_release('alt+f9')
            time.sleep(secs)
            keyboard.press_and_release('alt+f9')
            time.sleep(1)
            filename = os.listdir(path="E:\\–≤–∏–¥—Å\\Desktop\\")[0]
            new_filename = Path(filename).stem + ".ogg"
            os.rename('E:\\–≤–∏–¥—Å\\Desktop\\' + filename, 'E:\\–≤–∏–¥—Å\\Desktop\\' + new_filename)
            voice = open('E:\\–≤–∏–¥—Å\\Desktop\\' + new_filename, 'rb')
            bot.send_voice(chat_id, voice)

        def send_photo(message):
            chat_id = 840550973
            name = message.text + '.png'
            pyautogui.screenshot('D:\\3.14ton\\photos\\' + name)
            img = open('D:\\3.14ton\\photos\\' + name, 'rb')
            bot.send_photo(chat_id, img)

        def get_game_boot(message):
            keyboard = types.InlineKeyboardMarkup()  # –Ω–∞—à–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
            key_apex = types.InlineKeyboardButton(text='Apex Legends', callback_data='apex')  # –∫–Ω–æ–ø–∫–∞ ¬´–î–∞¬ª
            keyboard.add(key_apex)  # –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
            key_factory = types.InlineKeyboardButton(text='Satisfactory', callback_data='factory')
            keyboard.add(key_factory)
            question = '–ö–∞–∫—É—é?'
            bot.send_message(message.from_user.id, text=question, reply_markup=keyboard)

        @bot.callback_query_handler(func=lambda call: True)
        def callback_games(call):
            if call.data == "apex":
                os.startfile(r"D:\origin\Apex\r5apex")
                time.sleep(45)
                keyboard.press('space')
                bot.send_message(call.message.chat.id, '–ì–æ—Ç–æ–≤–æ ü•¥')
            elif call.data == "factory":
                os.startfile(r"D:\Satisfactory\FactoryGame")
                bot.send_message(call.message.chat.id, '–ì–æ—Ç–æ–≤–æ üò¨')


        def get_open(message):
            global op
            op = message.text
            bot.send_message(message.from_user.id, '–ù–∞ —Å–∫–æ–ª—å–∫–æ —Å–∏–º–≤–æ–ª–æ–≤?')
            bot.register_next_step_handler(message, get_number)

        def get_number(message):
            global number
            number = int(message.text)
            bot.send_message(message.from_user.id, '–ì–æ—Ç–æ–≤ —É–∑—Ä–µ—Ç—å?')
            bot.register_next_step_handler(message, —Åaesars_code)

        def —Åaesars_code(message):
            mess = op
            if mess[0] in my_libs.ru_book:
                lang = my_libs.ru_book
            else:
                lang = my_libs.eng_book
            num = number
            a = list(mess)
            for i in a:
                try:
                    lang.index(i) + num
                    if i in lang:
                        ind = lang.index(i)
                        ans1 = (lang[ind + num])
                        bot.send_message(message.from_user.id, ans1)
                    else:
                        ans2 = ("–Ø –µ—â–µ –Ω–µ –¥–æ–±–∞–≤–∏–ª —ç—Ç–æ—Ç —è–∑—ã–∫ ¬Ø\_(„ÉÑ)_/¬Ø ")
                        bot.send_message(message.from_user.id, ans2)
                except IndexError:
                    kek = num - (len(lang) - lang.index(i))
                    bot.send_message(message.from_user.id, (lang[kek]))

        def get_sint(message):
            send = message.text
            pyautogui.click(x=165, y=1050)
            time.sleep(3)
            keyboard.press_and_release('ctrl + t')
            time.sleep(1)
            pyautogui.click(x=500, y=60)
            time.sleep(1)
            keyboard.write("https://ru.piliapp.com/text-to-speech/")
            time.sleep(1)
            keyboard.press('enter')
            time.sleep(1)
            pyautogui.click(x=600, y=210)
            time.sleep(1)
            keyboard.write(send)
            time.sleep(1)
            pyautogui.click(x=1100, y=210)
            bot.send_message(message.from_user.id, "–ì–æ—Ç–æ–≤–æ üôÉ")

        if __name__ == '__main__':
            bot.polling(none_stop=True)
    except Exception:
        wnd = win32gui.FindWindow('SunAwtFrame', None)
        shell = win32com.client.Dispatch("WScript.Shell")
        shell.SendKeys('%')
        time.sleep(1)
        ifka = win32gui.GetForegroundWindow()
        if ifka == wnd:
            time.sleep(2)
            pyautogui.click(x=1818, y=45)
        else:
            SetForegroundWindow(wnd)
            time.sleep(2)
            keyboard.press_and_release('shift + f10')


thread1 = Thread(target=my_bot())
thread1.start()
